<ServerManagerConfiguration>

  <!--======================================================================-->
  <ProxyGroup name="representations">
    <KWEIlluminatedLinesRepresentationProxy name="IlluminatedLinesRepresentation"
      base_proxygroup="representations" base_proxyname="SurfaceRepresentation">
      <Documentation>
        Representation proxy illuminated lines.
      </Documentation>
      <!-- No additional properties here -->
    </KWEIlluminatedLinesRepresentationProxy>

    <KWESurfaceLICRepresentationProxy name="SurfaceLICRepresentation"
      base_proxygroup="representations"
      base_proxyname="SurfaceRepresentationBase">
      <Documentation>
        Representation proxy for Surface LIC.
      </Documentation>

      <InputProperty name="Input" command="NotUsed">
        <InputArrayDomain name="input_vectors"
          number_of_components="3">
          <RequiredProperties>
            <Property name="SelectInputVectors" 
              function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>

      <IntVectorProperty name="UseLICForLOD"
        command="SetUseLICForLOD"
        number_of_elements="1"
        update_self="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <StringVectorProperty 
        name="SelectInputVectors"
        command="SelectInputVectors"
        update_self="1"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        label="Vectors"> 
        <ArrayListDomain name="array_list" attribute_type="Vectors"
          input_domain_name="input_vectors">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>

        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>

        <Documentation>
          This property specifies the name of the input vector array to process.
        </Documentation>
      </StringVectorProperty>

      <SubProxy>
        <Proxy name="SurfaceLICPainter" 
          proxygroup="painters" proxyname="SurfaceLICPainter" />
        <ExposedProperties>
          <Property name="NumberOfSteps" />
          <Property name="StepSize" />
          <Property name="LICIntensity" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="SurfaceLICPainterLOD"
          proxygroup="painters" proxyname="SurfaceLICPainter" />
        <ShareProperties subproxy="SurfaceLICPainter"  />
      </SubProxy>

      <SubProxy>
        <Proxy name="SurfaceLICDefaultPainter" 
          proxygroup="painters" proxyname="SurfaceLICDefaultPainter" />
      </SubProxy>

      <SubProxy>
        <Proxy name="SurfaceLICDefaultPainterLOD" 
          proxygroup="painters" proxyname="SurfaceLICDefaultPainter" />
      </SubProxy>

      <!-- End of SurfaceLICRepresentation -->
    </KWESurfaceLICRepresentationProxy>

    <KWEGlyph3DMapperRepresentationProxy name="Glyph3DRepresentation"
      base_proxygroup="representations" base_proxyname="SurfaceRepresentation">
      <Documentation>
        Representation that uses vtkKWEGlyph3DMapper for glyphing.
      </Documentation>

      <InputProperty name="Source" 
        command="not-used" 
        port_index="1"
        multiple_input="1"
        label="Glyph Type" >
        <Documentation>
          Specify the source objects.
        </Documentation>
        <!-- 
          We don't directly connect to the mapper, since the data produced by
          the source needs to be delivered to the rendering nodes.
        -->
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
        </DataTypeDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="sources" name="ArrowSource" />
          <Proxy group="sources" name="ConeSource" />
          <Proxy group="sources" name="CubeSource" />
          <Proxy group="sources" name="CylinderSource" />
          <Proxy group="sources" name="LineSource" />
          <Proxy group="sources" name="SphereSource" />
          <Proxy group="sources" name="GlyphSource2D" />
        </ProxyListDomain>
      </InputProperty>

      <SubProxy>
        <!-- 
          GlyphMapper for high-res geometry.
        -->
        <Proxy name="GlyphMapper" proxygroup="mappers" proxyname="Glyph3DMapper" />
        <ExposedProperties>
          <Property name="SelectMaskArray" />
          <Property name="SelectScaleArray" />
          <Property name="SelectOrientationVectors" />
          <Property name="Scaling" />
          <Property name="ScaleMode" />
          <Property name="ScaleFactor" />
          <Property name="Orient" />
          <Property name="OrientationMode" />
          <Property name="Masking" />
        </ExposedProperties>
        <ShareProperties subproxy="Mapper">
        </ShareProperties>
      </SubProxy>
      
    </KWEGlyph3DMapperRepresentationProxy>
    <!-- End of "representations" -->
  </ProxyGroup>

  <!--======================================================================-->
  <ProxyGroup name="painters">
    <Proxy name="SurfaceLICPainter" class="vtkKWESurfaceLICPainter">
      <IntVectorProperty name="Enable"
        command="SetEnable"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="NumberOfSteps"
        command="SetNumberOfSteps"
        number_of_elements="1"
        default_values="40">
        <IntRangeDomain name="range" min="5" max="500" />
      </IntVectorProperty>

      <DoubleVectorProperty name="StepSize"
        command="SetStepSize"
        number_of_elements="1"
        default_values="1">
        <DoubleRangeDomain name="range" min="0.0001" max="10" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="LICIntensity"
        command="SetLICIntensity"
        number_of_elements="1"
        default_values="0.8">
        <DoubleRangeDomain name="range" min="0.0" max="1.0" />
      </DoubleVectorProperty>

    </Proxy>

    <Proxy name="SurfaceLICDefaultPainter" class="vtkKWESurfaceLICDefaultPainter">
      <ProxyProperty name="SurfaceLICPainter"
        command="SetSurfaceLICPainter">
      </ProxyProperty>
    </Proxy>
  <!-- End of "painters" -->
  </ProxyGroup>

  <!--======================================================================-->
  <ProxyGroup name="filters">
    <SourceProxy name="Image2DLIC" label="LIC on 2D Image" 
      class="vtkKWEImageDataLIC2D" >
      <Documentation>
        Line Integral Convolution using a vector field defined over a
        vtkImageData.
      </Documentation>

      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Image Shrink filter.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty name="StepSize"
        command="SetStepSize"
        number_of_elements="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="0.0" max="100.0" />
      </DoubleVectorProperty>

      <IntVectorProperty name="Magnification"
        command="SetMagnification"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="1.0" max="100" />
      </IntVectorProperty>

      <IntVectorProperty name="Steps"
        command="SetSteps"
        number_of_elements="1"
        default_values="20">
        <IntRangeDomain name="range" min="1" />
      </IntVectorProperty>
    </SourceProxy>

    <SourceProxy name="StructuredGridLIC2D" label="LIC on 2D Structured Grid" 
      class="vtkKWEStructuredGridLIC2D" >
      <Documentation>
        Line Integral Convolution using a vector field defined over a
        vtkStructuredGrid.
      </Documentation>

      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkStructuredGrid"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Image Shrink filter.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty name="StepSize"
        command="SetStepSize"
        number_of_elements="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="0.0" max="100.0" />
      </DoubleVectorProperty>

      <IntVectorProperty name="Magnification"
        command="SetMagnification"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="1.0" max="100" />
      </IntVectorProperty>

      <IntVectorProperty name="Steps"
        command="SetSteps"
        number_of_elements="1"
        default_values="20">
        <IntRangeDomain name="range" min="1" />
      </IntVectorProperty>
    </SourceProxy>
  </ProxyGroup>

  <!--======================================================================-->
  <ProxyGroup name="mappers">
    <SourceProxy name="Glyph3DMapper" class="vtkKWEGlyph3DMapper"
      base_proxygroup="mappers" base_proxyname="MapperBase">
      <Documentation>
        Mapper for optimized glyph placement.
        Do the same job than vtkGlyph3D but on the GPU. For this reason, it is
        a mapper not a vtkPolyDataAlgorithm. Also, some methods of vtkGlyph3D
        don't make sense in vtkKWEGlyph3DMapper: GeneratePointIds, old-style
        SetSource, PointIdsName, IsPointVisible.
      </Documentation>

      <InputProperty name="Input" command="SetInputConnection">
        <Documentation>
          Set the input dataset which is to be glyphed.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array_1" attribute_type="point"
          number_of_components="1" optional="1"/>
        <InputArrayDomain name="input_array_3" attribute_type="point"
          number_of_components="3" optional="1"/>
        <InputArrayDomain name="input_array_any" attribute_type="point" optional="1"/>
      </InputProperty>

      <InputProperty name="Source" 
        command="SetSourceConnection" 
        label="Glyph Type" >
        <Documentation>
          Specify the source objects.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
        </DataTypeDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="sources" name="ArrowSource" />
          <Proxy group="sources" name="ConeSource" />
          <Proxy group="sources" name="CubeSource" />
          <Proxy group="sources" name="CylinderSource" />
          <Proxy group="sources" name="LineSource" />
          <Proxy group="sources" name="SphereSource" />
          <Proxy group="sources" name="GlyphSource2D" />
        </ProxyListDomain>
      </InputProperty>

      <StringVectorProperty 
        name="SelectMaskArray" 
        command="SetInputArrayToProcess"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        default_values="2"
        label="Mask Array">
        <ArrayListDomain name="array_list" attribute_type="Scalars" 
             input_domain_name="input_array_1">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty 
        name="SelectScaleArray" 
        command="SetInputArrayToProcess"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        default_values="0" 
        label="Scale"> 
        <ArrayListDomain name="array_list" attribute_type="Scalars"
             input_domain_name="input_array_any">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty 
        name="SelectOrientationVectors" 
        command="SetInputArrayToProcess"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        default_values="3" 
        label="Orientation Vectors">  
          <!-- default value=5 so orientation vectors go to the right place -->
        <ArrayListDomain name="array_list" attribute_type="Vectors"
             input_domain_name="input_array_2">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="Scaling"
        command="SetScaling"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Enable/Disable scaling of source geometry.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ScaleMode"
        command="SetScaleMode"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry text="No Data Scaling Off" value="0" />
          <Entry text="Magnitude" value="1" />
          <Entry text="Vector Components" value="2" />
        </EnumerationDomain>
      </IntVectorProperty>

      <DoubleVectorProperty name="ScaleFactor"
        command="SetScaleFactor"
        number_of_elements="1"
        default_values="1.0" >
        <BoundsDomain name="bounds" mode="scaled_extent" scale_factor="0.1">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
          </RequiredProperties>
        </BoundsDomain>
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
             <Property name="SelectInputScalars" function="ArraySelection"/>
          </RequiredProperties>
        </ArrayRangeDomain>
        <ArrayRangeDomain name="vector_range">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
             <Property name="SelectInputVectors" function="ArraySelection"/>
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>
          The value of this property will be used as a multiplier for scaling
          the glyphs before adding them to the output.
        </Documentation>
     </DoubleVectorProperty>

      <IntVectorProperty name="Orient" 
        command="SetOrient" 
        number_of_elements="1"
        default_values="0" > 
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, the glyphs will be oriented based on the
          selected orientation vector array.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="OrientationMode"
        command="SetOrientationMode"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry text="Direction" value="0" />
          <Entry text="Rotation" value="1" />
        </EnumerationDomain>
        <Documentation>
          Orientation mode indicates if the OrientationArray provides the
          direction vector for the orientation or the rotations around each
          axes.  Default is DIRECTION.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="Masking"
        command="SetMasking"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Tells the mapper to skip glyphing input points that haves false values
          in the mask array. If there is no mask array (id access mode is set
          and there is no such id, or array name access mode is set and
          the there is no such name), masking is silently ignored.
          A mask array is a vtkBitArray with only one component.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="BoundsInfo"
        command="GetBounds"
        number_of_elements="6"
        information_only="1"
        default_values="0 1 0 1 0 1" >
        <SimpleDoubleInformationHelper />
      </DoubleVectorProperty>
      <!-- End of Glyph3DMapper -->
    </SourceProxy>
    
    <!-- End of mappers -->
  </ProxyGroup>

</ServerManagerConfiguration>

